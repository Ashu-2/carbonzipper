syntax = "proto3";
package carbonzippergrpcpb;

// Regenerate with protoc --gogofast_out=plugins=grpc:. carbonzippergrpcpb.proto --proto_path=../vendor/ --proto_path=.
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

// Version
service CarbonV1 {
    rpc GetVersion (google.protobuf.Empty) returns (ProtocolVersionResponse) {}
    rpc FetchMetrics (MultiFetchRequest) returns (MultiFetchResponse) {}
    rpc FindMetrics (MultiGlobRequest) returns (MultiGlobResponse) {}
    rpc MetricsInfo (MultiMetricsInfoRequest) returns (MultiMetricsInfoResponse) {}
    rpc ListMetrics (google.protobuf.Empty) returns (ListMetricsResponse) {}
    rpc Stats (google.protobuf.Empty) returns (MetricDetailsResponse) {}
}

message ProtocolVersionResponse {
    int64 version = 1;
}

message filteringFunction {
    string name = 1;
    repeated string arguments = 2;
}

// Fetch Data
message FetchRequest {
    string name = 1;
    uint32 startTime = 2;
    uint32 stopTime = 3;
    repeated filteringFunction filterFunctions = 4;
}

message MultiFetchRequest {
    repeated FetchRequest metrics = 1 [(gogoproto.nullable) = false];
}

message MetricMetadata {
    uint32 stepTime = 1;
    string aggregationFunction = 2;
}

message FetchResponse {
    string name = 1;
    uint32 startTime = 2;
    uint32 stopTime = 3;
    repeated double values = 4;
    MetricMetadata metadata = 5;
}

message MultiFetchResponse {
    repeated FetchResponse metrics = 1 [(gogoproto.nullable) = false];
}

// Find Metrics
message GlobMatch {
    string path = 1;
    bool isLeaf = 2;
}

message GlobResponse {
    string name = 1;
    repeated GlobMatch matches = 2 [(gogoproto.nullable) = false];
}

message MultiGlobResponse {
    map<string, GlobResponse> metrics = 1 [(gogoproto.nullable) = false];
}

message MultiGlobRequest {
    repeated string metrics = 1;
}

// Information about metrics
message Retention {
    uint32 secondsPerPoint = 1;
    uint32 numberOfPoints = 2;
}

message InfoResponse {
    string name = 1;
    string aggregationMethod = 2;
    uint32 maxRetention = 3;
    float xFilesFactor = 4;
    repeated Retention retentions = 5 [(gogoproto.nullable) = false];
}

message MetricsInfoRequest {
    string name = 1;
}

message MultiMetricsInfoRequest {
    repeated string names = 1;
}

message MetricsInfoResponse {
    string server = 1;
    InfoResponse info = 2;
}

message MultiMetricsInfoResponse {
    string server = 1;
    repeated InfoResponse info = 2 [(gogoproto.nullable) = false];
}

message ZipperInfoResponse {
    repeated MetricsInfoResponse responses = 1 [(gogoproto.nullable) = false];
}

// List all metrics
message ListMetricsResponse {
    repeated string Metrics = 1;
}

// Get stats about metrics
message MetricDetails {
    int64 Size = 2;
    int64 ModTime = 3;
    int64 ATime = 4;
    int64 RdTime = 5;
}

message MetricDetailsResponse {
    map<string, MetricDetails> metrics = 1;
    uint64 FreeSpace = 2;
    uint64 TotalSpace = 3;
}
